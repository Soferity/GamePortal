@inherits ErrorBoundary

@if (CurrentException is null)
{
    @ChildContent
}
else if (ErrorContent is not null)
{
    @ErrorContent(CurrentException)
}
else
{
    <ErrorPage />
    @*<div style="background-color: rgb(66,66,66); border: 2px dashed black; white-space: pre; font-family: consolas, monospace;">
        @foreach (var exception in receivedExceptions)
        {
            <div class="received-exception" style="background-color: rgba(255,255,255,0.3); margin: 0.5rem; padding: 0.5rem;">
                <p>@exception.Message</p>
                <br />
                <p>@exception.StackTrace</p>
            </div>
        }
    </div>*@
}

@code {
    List<Exception> receivedExceptions = new();

    protected override Task OnErrorAsync(Exception exception)
    {
        receivedExceptions.Add(exception);

        AppCenterService.TrackError(exception);
        
        return base.OnErrorAsync(exception);
    }

    public new void Recover()
    {
        receivedExceptions.Clear();
        base.Recover();
    }
}